library(pomp)
y <- bsflu$B
y
y[1:2]
reshape(y[1:4])
?reshape
y[1:4].reshape[2,2]
n = 1000
parameters = array(c(1.2/n, 0.6), dim =c(2,1))
parameters
parameters[1]
seq(0, 1, by = 0.1)
x_prev = n*array(c(0.95,0.05, 0,0, 0,0,0,0), dim = c(8,1), byrow = T)
?array
x_prev = n*array(c(0.95,0.05, 0,0, 0,0,0,0), dim = c(8,1))
x_pred
x_prev = n*array(c(0.95,0.05, 0,0, 0,0,0,0), dim = c(8,1))
x_pred
x_prev = n*array(c(0.95,0.05, 0,0, 0,0,0,0), dim = c(8,1))
x_prev
state = x_prev
eta   = state[1:2]
m     = state[3:4]
Sigma = state[5:8]
Sigma
Sigma[2]=1
Sigma = array(Sigma, dim = c(2,2), byrow = T)
Sigma = array(Sigma, dim = c(2,2))
Sigma
Sigma = state[5:8]
Sigma = array(t(Sigma), dim = c(2,2))
Sigma
Sigma[2]=1
Sigma = state[5:8]
Sigma[2]=1
Sigma = array(t(Sigma), dim = c(2,2))
Sigma
Sigma = state[5:8]
Sigma[2]=1
t(Sigma)
Sigma = state[5:8]
Sigma[2]=1
Sigma = array(Sigma, dim = c(2,2))
Sigma
Sigma = aperm(array(Sigma, dim = c(2,2)))
Sigma = state[5:8]
Sigma[2]=1
Sigma = aperm(array(Sigma, dim = c(2,2)))
Sigma
eta   = state[1:2]
m     = state[3:4]
Sigma = state[5:8]
Sigma = aperm(array(Sigma, dim = c(2,2)))
beta_param  = parameters[1]
gamma_param = parameters[2]
S = eta[1]
I = eta[2]
At = aperm(array(c(-1, 0, 1, -1), dim = c(2,2)))
At
h  = array(c(beta_param*S*I, gamma_param*I), dim = c(2,1), byrow = T)
h  = array(c(beta_param*S*I, gamma_param*I), dim = c(2,1))
F_ = aperm(array(c(-beta_param*I, -beta_param*S, beta_param*I, (beta_param*S) - gamma_param), dim = c(2,2)))
H  = matrix(diag(h), ncol = 2)
H
H  = diag(h)
H
h
H  = diag(h, 2, 2)
H  = matrix(NA, ncol=2, nrow=2)
H
H  = matrix(0, ncol=2, nrow=2)
H
diag(H)
diag(H) = h
diag(H)
H  = matrix(0, ncol=2, nrow=2)
h
diag(H) = h
H
deta_dt = At %*% h
deta_dt
deta_dt = At %*% h
dm_dt   = F_ %*% m
dPsi_dt = (Sigma %*% t(F_)) + (F_ %*% Sigma) + (At %*% (H %*% t(At))
}
n = 1000
parameters = array(c(1.2/n, 0.6), dim =c(2,1))
times = seq(0, 1, by = 0.1)
time_steps = 20
x_prev = n*array(c(0.95,0.05, 0,0, 0,0,0,0), dim = c(8,1))
x_prev
At %*% h
F_ %*% m
(Sigma %*% t(F_)) + (F_ %*% Sigma) + (At %*% (H %*% t(At))
)
dPsi_dt = (Sigma %*% t(F_)) + (F_ %*% Sigma) + (At %*% (H %*% t(At)))
dPsi_dt[1,2]=0
dPsi_dt
array(dPsi_dt, dim = c(4,))
array(dPsi_dt, dim = c(4))
array(t(dPsi_dt), dim = c(4))
c(deta_dt, dm_dt)
dm_dt
deta_dt
c(deta_dt, dm_dt, array(t(dPsi_dt), dim = c(4)))
eta   = state[1:2]
m     = state[3:4]
Sigma = state[5:8]
Sigma = aperm(array(Sigma, dim = c(2,2)))
beta_param  = parameters[1]
gamma_param = parameters[2]
S = eta[1]
I = eta[2]
At = aperm(array(c(-1, 0, 1, -1), dim = c(2,2)))
h  = array(c(beta_param*S*I, gamma_param*I), dim = c(2,1))
F_ = aperm(array(c(-beta_param*I, -beta_param*S, beta_param*I, (beta_param*S) - gamma_param), dim = c(2,2)))
H  = matrix(0, ncol=2, nrow=2)
diag(H) = h
deta_dt = At %*% h
dm_dt   = F_ %*% m
dPsi_dt = (Sigma %*% t(F_)) + (F_ %*% Sigma) + (At %*% (H %*% t(At)))
c(deta_dt, dm_dt, array(t(dPsi_dt), dim = c(4)))
list(c(deta_dt, dm_dt, array(t(dPsi_dt), dim = c(4))))
LNA_restart <- function(t, state, parameters){
eta   = state[1:2]
m     = state[3:4]
Sigma = state[5:8]
Sigma = aperm(array(Sigma, dim = c(2,2)))
beta_param  = parameters[1]
gamma_param = parameters[2]
S = eta[1]
I = eta[2]
At = aperm(array(c(-1, 0, 1, -1), dim = c(2,2)))
h  = array(c(beta_param*S*I, gamma_param*I), dim = c(2,1))
F_ = aperm(array(c(-beta_param*I, -beta_param*S, beta_param*I, (beta_param*S) - gamma_param), dim = c(2,2)))
H  = matrix(0, ncol=2, nrow=2)
diag(H) = h
deta_dt = At %*% h
dm_dt   = F_ %*% m
dPsi_dt = (Sigma %*% t(F_)) + (F_ %*% Sigma) + (At %*% (H %*% t(At)))
return(list(c(deta_dt, dm_dt, array(t(dPsi_dt), dim = c(4)))))
}
n = 1000
parameters = array(c(1.2/n, 0.6), dim =c(2,1))
times = seq(0, 1, by = 0.1)
time_steps = 20
x_prev = n*array(c(0.95,0.05, 0,0, 0,0,0,0), dim = c(8,1))
times_grid = seq(0, 1, by = 0.1)
ode(y = x_prev, times = times_grid, func = LNA_restart, parms = parameters)
library(deSolve)
ode(y = x_prev, times = times_grid, func = LNA_restart, parms = parameters)
