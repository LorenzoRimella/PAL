for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
y <- bsflu$B
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
plot(time, type = "l", ylim = c(0.03, 0.19))
y <- bsflu$B
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
plot(time, type = "l", ylim = c(0.03, 0.17))
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(time, type = "l")
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
plot(ode_step, time, type = "l", ylim = c(0.005, 0.17))
plot(ode_step, time, type = "l", ylim = c(0.005, 0.11))
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(ode_step, time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(ode_step, time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(ode_step, time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(ode_step, time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(ode_step, time, type = "l")
ode_step = seq(2, 100, by = 5)
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
lines(ode_step, time, type = "l")
?matrix
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 100
compare = matrix(NA, nrow = iterations , ncol = length(ode_step))
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 10
compare = matrix(NA, nrow = iterations , ncol = length(ode_step))
for(reps in 1:10){
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
compare[reps,] = time
}
plot(ode_step, compare[1,], type = "l", ylim = c(0.005, 0.11))
for(reps in 2:10){
lines(ode_step, compare[reps,], type = "l")
}
?hline
abline(h=0.0006144047 , color="red")
abline(h=0.0006144047 , colour="red")
abline(h=0.0006144047 , colour=2)
abline(h=0.0006144047 , color=2)
abline(h=0.0006144047)
abline(ode_step, h=0.0006144047)
?abline
abline(h=c(0.0006144047))
plot(ode_step, compare[1,], type = "l", ylim = c(0.0, 0.11))
for(reps in 2:10){
lines(ode_step, compare[reps,], type = "l")
}
abline(h=c(0.0006144047))
plot(ode_step, compare[1,], type = "l", ylim = c(0.0, 0.11))
for(reps in 2:10){
lines(ode_step, compare[reps,], type = "l")
}
abline(h=c(0.0006144047), c = "red")
abline(h=c(0.0006144047), c = 2)
plot(ode_step, compare[1,], type = "l", ylim = c(0.0, 0.11))
for(reps in 2:10){
lines(ode_step, compare[reps,], type = "l")
}
abline(h=c(0.0006144047))
?ode
library(Rcpp)
library(pomp)
library(deSolve)
source('bsflu_mcmc.R')
source("LNA/LNA_ode_system.R")
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 10
start = Sys.time()
SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
library(Rcpp)
library(pomp)
library(deSolve)
source('bsflu_mcmc.R')
source("LNA/LNA_ode_system.R")
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 10
compare = matrix(NA, nrow = iterations , ncol = length(ode_step))
start = Sys.time()
a = SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
library(Rcpp)
library(pomp)
library(deSolve)
source('bsflu_mcmc.R')
source("LNA/LNA_ode_system.R")
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 10
compare = matrix(NA, nrow = iterations , ncol = length(ode_step))
start = Sys.time()
a = SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
time[i]
library(Rcpp)
library(pomp)
library(deSolve)
source('bsflu_mcmc.R')
source("LNA/LNA_ode_system.R")
source("PAL.R")
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 10
ode_step = seq(2, 50, by = 1)
iterations = 10
compare = matrix(NA, nrow = iterations , ncol = length(ode_step))
for(reps in 1:iterations){
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
a = SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
compare[reps,] = time
}
library(Rcpp)
library(pomp)
library(deSolve)
source('bsflu_mcmc.R')
source("LNA/LNA_ode_system.R")
source("PAL.R")
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 10
compare = matrix(NA, nrow = iterations , ncol = length(ode_step))
for(reps in 1:iterations){
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
a = SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
compare[reps,] = time
}
compare_PAL = matrix(NA, nrow = iterations , ncol = 1)
for(reps in 1:iterations){
start = Sys.time()
a = SIR_approxlik_R(y, init_pop, init_params)
compare_PAL[reps] = as.double(Sys.time()-start)
}
plot(ode_step, compare[1,], type = "l", ylim = c(0.0, 0.11))
for(reps in 2:10){
lines(ode_step, compare[reps,], type = "l")
abline(h=compare_PAL[reps])
}
compare_PAL
################ Simulation study
#Set simulation parameters
init_pop <- c(763-1,1,0)
init_params <- c(2,0.5,0.8, 400)
y <- bsflu$B
ode_step = seq(2, 50, by = 1)
iterations = 10
compare = matrix(NA, nrow = iterations , ncol = length(ode_step))
for(reps in 1:iterations){
time = rep(0, length(ode_step))
for(i in 1:length(ode_step)){
start = Sys.time()
a = SIR_approx_lik_LNA_time(y, init_pop, init_params, ode_step[i])
time[i] = as.double(Sys.time()-start)
}
compare[reps,] = time
}
compare_PAL = matrix(NA, nrow = iterations , ncol = 1)
for(reps in 1:iterations){
start = Sys.time()
a = SIR_approxlik_R(y, init_pop, init_params)
compare_PAL[reps] = as.double(Sys.time()-start)
}
plot(ode_step, compare[1,], type = "l", ylim = c(0.0, 0.11))
for(reps in 2:10){
lines(ode_step, compare[reps,], type = "l")
abline(h=compare_PAL[reps])
}
compare_PAL
